"""
描述
小易去附近的商店买苹果，奸诈的商贩使用了捆绑交易，只提供6个每袋和8个每袋的包装(包装不可拆分)。 可是小易现在只想购买恰好n个苹果，小易想购买尽量少的袋数方便携带。如果不能购买恰好n个苹果，小易将不会购买。
输入描述：
输入一个整数n，表示小易想购买n(1 ≤ n ≤ 100)个苹果
输出描述：
输出一个整数表示最少需要购买的袋数，如果不能买恰好n个苹果则输出-1
"""


def min_bags(n):
    # 尝试使用不同数量的8个苹果的袋子
    for i in range(n // 8, -1, -1):  # 从最大可能的8袋数量开始
        remaining = n - i * 8  # 剩余需要购买的苹果数量
        if remaining % 6 == 0:  # 如果剩余的苹果可以用6个袋子装
            return i + remaining // 6  # 返回袋数的总和
    return -1  # 如果没有找到合适的组合


# 输入处理
n = int(input())
print(min_bags(n))
